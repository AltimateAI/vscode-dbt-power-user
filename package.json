{
  "name": "vscode-dbt-power-user",
  "displayName": "dbt Power User",
  "description": "This extension makes vscode seamlessly work with dbt",
  "icon": "media/images/dbt.png",
  "publisher": "innoverio",
  "license": "MIT",
  "homepage": "https://github.com/innoverio/vscode-dbt-power-user",
  "repository": {
    "type": "git",
    "url": "https://github.com/innoverio/vscode-dbt-power-user.git"
  },
  "bugs": {
    "url": "https://github.com/innoverio/vscode-dbt-power-user/issues"
  },
  "version": "0.10.1",
  "engines": {
    "vscode": "^1.52.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "dbt",
    "sql",
    "jinja-sql"
  ],
  "activationEvents": [
    "workspaceContains:**/dbt_project.yml"
  ],
  "main": "./dist/extension",
  "contributes": {
    "snippets": [
      {
        "language": "jinja-sql",
        "path": "./snippets/snippets_sql.json"
      },
      {
        "language": "jinja-yaml",
        "path": "./snippets/snippets_yaml.json"
      },
      {
        "language": "jinja-md",
        "path": "./snippets/snippets_markdown.json"
      }
    ],
    "configuration": [
      {
        "title": "dbt Power User",
        "properties": {
          "dbt.dbtPythonPathOverride": {
            "type": "string",
            "description": "Path to a python executable or entrypoint. If undefined, we will use the Python extension's configured environment. Most users will not need to change this setting without specific reasoning such as custom wrappers and should instead modify the Python extensions selected interpreter."
          },
          "dbt.runModelCommandAdditionalParams": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Add additonal params to the dbt run model command."
          },
          "dbt.profilesDirOverride": {
            "type": "string",
            "description": "Override the profiles dir for every dbt command. Absolute path or relative to the directory containing profiles.yml"
          },
          "dbt.queryLimit": {
            "type": "integer",
            "description": "The maximum number of rows the `Preview SQL Query` command returns.",
            "default": 500
          },
          "dbt.queryTemplate": {
            "type": "string",
            "description": "Override the default query template that is used by the `Preview SQL Query` command. Use this if your database has special syntax to limit query results",
            "default": "select * from ({query}) as query limit {limit}"
          },
          "dbt.versionCheck": {
            "type": "string",
            "enum": [
              "both",
              "status bar",
              "error message",
              "neither"
            ],
            "default": "both",
            "enumDescriptions": [
              "Show the outdated version message both in the status bar and as an error message popup.",
              "Show the outdated version message in the status bar, but not as an error message popup.",
              "Show the outdated version message as an error message popup, but not in the status bar.",
              "Do not show the outdated version message in the status bar or as an error message popup."
            ],
            "description": "This determines which messages will show when the dbt version is outdated."
          }
        }
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "dbt_view",
          "title": "dbt Power User",
          "icon": "./media/images/dbt_icon.svg",
          "contextualTitle": "dbt Power User"
        }
      ],
      "panel": [
        {
          "id": "dbt_preview_results",
          "title": "Query Results",
          "icon": "./media/images/dbt_icon.svg"
        }
      ]
    },
    "views": {
      "dbt_view": [
        {
          "id": "model_test_treeview",
          "name": "Model Tests"
        },
        {
          "id": "parent_model_treeview",
          "name": "Parent Models"
        },
        {
          "id": "children_model_treeview",
          "name": "Children Models"
        }
      ],
      "dbt_preview_results": [
        {
          "id": "dbtPowerUser.PreviewResults",
          "name": "",
          "type": "webview"
        }
      ]
    },
    "commands": [
      {
        "command": "dbtPowerUser.runCurrentModel",
        "title": "Run dbt Model",
        "icon": "$(database)"
      },
      {
        "command": "dbtPowerUser.compileCurrentModel",
        "title": "Compile dbt Model",
        "icon": {
          "light": "./media/images/build_light.svg",
          "dark": "./media/images/build_dark.svg"
        }
      },
      {
        "command": "dbtPowerUser.sqlPreview",
        "title": "Compiled dbt Preview",
        "icon": "$(diff)"
      },
      {
        "command": "dbtPowerUser.runTest",
        "title": "Run Test",
        "icon": "$(zap)"
      },
      {
        "command": "dbtPowerUser.testCurrentModel",
        "title": "Run dbt Tests",
        "icon": "$(zap)"
      },
      {
        "command": "dbtPowerUser.runChildrenModels",
        "title": "Run Downstream Models",
        "icon": {
          "light": "./media/images/run-light.svg",
          "dark": "./media/images/run-dark.svg"
        }
      },
      {
        "command": "dbtPowerUser.runParentModels",
        "title": "Run Upstream Models",
        "icon": {
          "light": "./media/images/run-light.svg",
          "dark": "./media/images/run-dark.svg"
        }
      },
      {
        "command": "dbtPowerUser.showRunSQL",
        "title": "Open dbt target folder run SQL",
        "icon": {
          "light": "./media/images/file-code_light.svg",
          "dark": "./media/images/file-code_dark.svg"
        }
      },
      {
        "command": "dbtPowerUser.showCompiledSQL",
        "title": "Open dbt target folder compiled SQL",
        "icon": {
          "light": "./media/images/file-code_light.svg",
          "dark": "./media/images/file-code_dark.svg"
        }
      },
      {
        "command": "dbtPowerUser.executeSQL",
        "title": "Execute dbt SQL",
        "icon": {
          "light": "./media/images/run-light.svg",
          "dark": "./media/images/run-dark.svg"
        }
      }
    ],
    "keybindings": [
      {
        "key": "Ctrl+Enter",
        "mac": "Cmd+Enter",
        "command": "dbtPowerUser.executeSQL",
        "when": "editorFocus && resourceLangId =~ /^sql$|^jinja-sql$/"
      },
      {
        "key": "Ctrl+'",
        "mac": "Cmd+'",
        "command": "dbtPowerUser.sqlPreview"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "command": "dbtPowerUser.executeSQL",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/",
          "group": "navigation@1"
        },
        {
          "command": "dbtPowerUser.runCurrentModel",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/",
          "group": "navigation@2"
        },
        {
          "command": "dbtPowerUser.testCurrentModel",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/",
          "group": "navigation@3"
        },
        {
          "command": "dbtPowerUser.sqlPreview",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/",
          "group": "navigation@4"
        }
      ],
      "editor/context": [
        {
          "command": "dbtPowerUser.showCompiledSQL",
          "group": "dbt@4",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/"
        },
        {
          "command": "dbtPowerUser.showRunSQL",
          "group": "dbt@5",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/"
        },
        {
          "command": "dbtPowerUser.testCurrentModel",
          "group": "dbt@2",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/"
        },
        {
          "command": "dbtPowerUser.runCurrentModel",
          "group": "dbt@1",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/"
        },
        {
          "command": "dbtPowerUser.compileCurrentModel",
          "group": "dbt@3",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/"
        }
      ],
      "view/title": [
        {
          "command": "dbtPowerUser.testCurrentModel",
          "when": "view == model_test_treeview",
          "group": "navigation"
        },
        {
          "command": "dbtPowerUser.runChildrenModels",
          "when": "view == children_model_treeview",
          "group": "navigation"
        },
        {
          "command": "dbtPowerUser.runParentModels",
          "when": "view == parent_model_treeview",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "dbtPowerUser.runTest",
          "when": "view == model_test_treeview && viewItem != source",
          "group": "inline"
        },
        {
          "command": "dbtPowerUser.runChildrenModels",
          "when": "view == children_model_treeview && viewItem != source",
          "group": "inline"
        },
        {
          "command": "dbtPowerUser.runParentModels",
          "when": "view == parent_model_treeview && viewItem != source",
          "group": "inline"
        }
      ]
    },
    "languages": [
      {
        "id": "jinja-sql",
        "icon": {
          "light": "./media/images/dbt_file_icon.svg",
          "dark": "./media/images/dbt_file_icon.svg"
        }
      }
    ]
  },
  "scripts": {
    "prepare": "husky install",
    "vscode:prepublish": "webpack --mode production",
    "webpack": "webpack --mode development",
    "webpack-dev": "webpack --mode development --watch",
    "test-compile": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "lint:fix": "eslint src --ext ts --fix",
    "deploy-vscode": "vsce publish",
    "build-vsix": "vsce package",
    "deploy-openvsx": "ovsx publish"
  },
  "devDependencies": {
    "@types/glob": "^8.0.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "^18.11.10",
    "@types/vscode": "^1.73.1",
    "@types/which": "^2.0.1",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/test-electron": "^2.2.0",
    "copy-webpack-plugin": "^11.0.0",
    "eslint": "^8.28.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-prettier": "^4.2.1",
    "file-loader": "^6.1.0",
    "glob": "^8.0.3",
    "husky": "^8.0.1",
    "lint-staged": "^13.0.4",
    "mocha": "^10.1.0",
    "ovsx": "^0.5.2",
    "prettier": "^2.8.0",
    "prettier-eslint": "^15.0.1",
    "prettier-plugin-organize-imports": "^3.2.1",
    "terser-webpack-plugin": "^5.3.1",
    "ts-loader": "^8.0.3",
    "typescript": "^4.9.3",
    "vsce": "^2.15.0",
    "webpack": "^5.67.0",
    "webpack-cli": "^4.9.1"
  },
  "extensionDependencies": [
    "samuelcolvin.jinjahtml",
    "ms-python.python"
  ],
  "dependencies": {
    "@vscode/webview-ui-toolkit": "^1.2.0",
    "dayjs": "^1.8.34",
    "inversify": "^6.0.1",
    "inversify-binding-decorators": "^4.0.0",
    "parse-diff": "^0.10.0",
    "python-bridge": "github:mdesmet/node-python-bridge#feat/detached",
    "reflect-metadata": "^0.1.13",
    "which": "^3.0.0",
    "yaml": "^2.0.0-10"
  },
  "lint-staged": {
    "*.ts": [
      "eslint src --ext ts --fix",
      "eslint --max-warnings=0"
    ],
    "*.{js,css,md,html,json}": "prettier --cache --write"
  }
}
