{
  "name": "vscode-dbt-power-user",
  "displayName": "dbt Power User",
  "description": "This extension makes vscode seamlessly work with dbt: auto-complete, preview, column lineage, AI docs generation, health checks, cost estimation etc",
  "icon": "media/images/dbt.png",
  "publisher": "innoverio",
  "license": "MIT",
  "homepage": "https://www.altimate.ai/vscode",
  "repository": {
    "type": "git",
    "url": "https://github.com/AltimateAI/vscode-dbt-power-user.git"
  },
  "bugs": {
    "url": "https://github.com/AltimateAI/vscode-dbt-power-user/issues"
  },
  "version": "0.35.0",
  "engines": {
    "vscode": "^1.81.0"
  },
  "capabilities": {
    "hoverProvider": true
  },
  "categories": [
    "Other",
    "Programming Languages",
    "Snippets",
    "Data Science",
    "Formatters",
    "Testing"
  ],
  "keywords": [
    "dbt",
    "sql",
    "jinja-sql"
  ],
  "activationEvents": [
    "workspaceContains:**/dbt_project.yml"
  ],
  "main": "./dist/extension",
  "contributes": {
    "snippets": [
      {
        "language": "jinja-sql",
        "path": "./snippets/snippets_sql.json"
      },
      {
        "language": "jinja-yaml",
        "path": "./snippets/snippets_yaml.json"
      },
      {
        "language": "jinja-md",
        "path": "./snippets/snippets_markdown.json"
      }
    ],
    "configuration": [
      {
        "title": "Altimate AI",
        "properties": {
          "dbt.altimateAiKey": {
            "type": "string",
            "displayName": "Altimate AI API Key",
            "markdownDescription": "Needed for features that require backend support. Sign up for a free Altimate AI account [here](https://app.myaltimate.com/register). API Key can be copied from Altimate AI UI (navigate to Settings->API Key)"
          },
          "dbt.altimateInstanceName": {
            "type": "string",
            "displayName": "Altimate AI Instance Name",
            "markdownDescription": "Needed for features that require backend support. Sign up for a free Altimate AI account [here](https://app.myaltimate.com/register). If your Altimate AI instance URL is https://betatest.app.myaltimate.com/, The instance name is betatest"
          },
          "dbt.enableNewLineagePanel": {
            "type": "boolean",
            "description": "Enable the new lineage panel in dbt."
          },
          "dbt.enableNewDocsPanel": {
            "type": "boolean",
            "description": "Enable the new docs panel in dbt."
          },
          "dbt.enableNewQueryPanel": {
            "type": "boolean",
            "description": "Enable the new query panel in dbt.",
            "default": true
          }
        }
      },
      {
        "title": "dbt Power User",
        "properties": {
          "dbt.dbtPythonPathOverride": {
            "type": "string",
            "description": "Path to a python executable or entrypoint. If undefined, we will use the Python extension's configured environment. Most users will not need to change this setting without specific reasoning such as custom wrappers and should instead modify the Python extensions selected interpreter."
          },
          "dbt.dbtCustomRunnerImport": {
            "type": "string",
            "description": "Python import string to import custom dbt runner. ",
            "default": "from dbt.cli.main import dbtRunner"
          },
          "dbt.allowListFolders": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Define workspace-relative paths to include. Only projects within these folders will be built. If empty, no filtering is applied. The path should be relative to the workspace. Example: [folder1, folder2]"
          },
          "dbt.runModelCommandAdditionalParams": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Add additional params to the dbt run model command. Ex: --select model1 --target prod needs to be added as four different entries \n--select \nmodel1 \n--target \nprod "
          },
          "dbt.buildModelCommandAdditionalParams": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Add additional params to the dbt build model command. Ex: --select model1 --target prod needs to be added as four different entries \n--select \nmodel1 \n--target \nprod "
          },
          "dbt.queryLimit": {
            "type": "integer",
            "description": "The maximum number of rows the `Preview SQL Query` command returns.",
            "default": 500,
            "minimum": 1
          },
          "dbt.queryTemplate": {
            "type": "string",
            "description": "Override the default query template that is used by the `Preview SQL Query` command. Use this if your database has special syntax to limit query results",
            "default": "select * from ({query}\n) as query limit {limit}"
          },
          "dbt.queryScale": {
            "type": "string",
            "description": "Override the default scale of the result table that is used by the `Preview SQL Query` command.",
            "default": 1
          },
          "dbt.fileNameTemplateGenerateModel": {
            "type": "string",
            "enum": [
              "{prefix}_{sourceName}_{tableName}",
              "{prefix}_{sourceName}__{tableName}",
              "{prefix}_{tableName}",
              "{tableName}"
            ],
            "default": "{prefix}_{sourceName}_{tableName}",
            "description": "Set the naming template that is used when generating a model from a source yml file."
          },
          "dbt.prefixGenerateModel": {
            "type": "string",
            "default": "base",
            "description": "Set the prefix that is used when generating a model from a source yml file."
          },
          "dbt.sqlFmtPath": {
            "type": "string",
            "description": "Path to `sqlfmt`. If not set, it will look on your PATH"
          },
          "dbt.sqlFmtAdditionalParams": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Add additional params to `sqlfmt`"
          },
          "dbt.deferConfigPerProject": {
            "type": "object",
            "description": "Run subset of models without building their parent models",
            "scope": "resource",
            "patternProperties": {
              ".*": {
                "type": "object",
                "properties": {
                  "deferToProduction": {
                    "type": "boolean",
                    "description": "Run subset of models without building their parent models",
                    "default": false
                  },
                  "manifestPathForDeferral": {
                    "type": "string",
                    "description": "Manifest path to defer the parent models",
                    "default": ""
                  },
                  "favorState": {
                    "type": "boolean",
                    "description": "If a given model exists in both the current environment and the defined defer state, turn this flag on to use the latter always",
                    "default": false
                  }
                }
              }
            }
          }
        }
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "dbt_view",
          "title": "dbt Power User",
          "icon": "./media/images/dbt_icon.svg",
          "contextualTitle": "dbt Power User"
        },
        {
          "id": "datapilot_view",
          "title": "DataPilot Chat",
          "icon": "./media/images/altimate.svg",
          "contextualTitle": "Altimate Data pilot"
        }
      ],
      "panel": [
        {
          "id": "dbt_preview_results",
          "title": "Query Results",
          "icon": "./media/images/dbt_icon.svg"
        },
        {
          "id": "lineage_view",
          "title": "Lineage",
          "icon": "./media/images/dbt_icon.svg"
        },
        {
          "id": "docs_edit_view",
          "title": "Documentation Editor",
          "icon": "./media/images/dbt_icon.svg"
        },
        {
          "id": "insights_view",
          "title": "Actions",
          "icon": "./media/images/dbt_icon.svg"
        }
      ]
    },
    "views": {
      "dbt_view": [
        {
          "id": "model_test_treeview",
          "name": "Model Tests"
        },
        {
          "id": "parent_model_treeview",
          "name": "Parent Models"
        },
        {
          "id": "children_model_treeview",
          "name": "Children Models"
        },
        {
          "id": "documentation_treeview",
          "name": "Documentation"
        },
        {
          "id": "icon_actions_treeview",
          "name": "Project Actions âœ¨"
        }
      ],
      "dbt_preview_results": [
        {
          "id": "dbtPowerUser.PreviewResults",
          "name": "",
          "type": "webview"
        }
      ],
      "lineage_view": [
        {
          "id": "dbtPowerUser.Lineage",
          "name": "",
          "type": "webview"
        }
      ],
      "docs_edit_view": [
        {
          "id": "dbtPowerUser.DocsEdit",
          "name": "",
          "type": "webview"
        }
      ],
      "datapilot_view": [
        {
          "type": "webview",
          "id": "dbtPowerUser.datapilot-webview",
          "name": "",
          "icon": "./media/images/dbt_icon.svg"
        }
      ],
      "insights_view": [
        {
          "id": "dbtPowerUser.Insights",
          "name": "",
          "type": "webview"
        }
      ]
    },
    "commands": [
      {
        "command": "dbtPowerUser.puQuickPick",
        "category": "dbt Power User",
        "title": "dbt Power User Quick Pick"
      },
      {
        "command": "dbtPowerUser.openInsights",
        "category": "dbt Power User",
        "title": "Open dbt Power User insights panel"
      },
      {
        "command": "dbtPowerUser.sqlQuickPick",
        "title": "SQL Actions",
        "category": "dbt Power User",
        "icon": {
          "light": "./media/images/sql-action-light.svg",
          "dark": "./media/images/sql-action-dark.svg"
        }
      },
      {
        "command": "dbtPowerUser.runCurrentModel",
        "title": "Run dbt Model",
        "category": "dbt Power User",
        "icon": {
          "light": "./media/images/run-light.svg",
          "dark": "./media/images/run-dark.svg"
        }
      },
      {
        "command": "dbtPowerUser.openDatapilotWithQuery",
        "title": "Start Chat",
        "category": "dbt Power User"
      },
      {
        "command": "dbtPowerUser.summarizeQuery",
        "title": "Explain",
        "category": "dbt Power User"
      },
      {
        "command": "dbtPowerUser.changeQuery",
        "title": "Change",
        "category": "dbt Power User"
      },
      {
        "command": "dbtPowerUser.sqlToModel",
        "title": "Convert to dbt Model (Preview feature)",
        "shortTitle": "Convert to dbt Model",
        "category": "dbt Power User",
        "icon": {
          "light": "./media/images/preview-dbt-light.svg",
          "dark": "./media/images/preview-dbt-dark.svg"
        }
      },
      {
        "command": "dbtPowerUser.validateSql",
        "title": "Validate SQL",
        "category": "dbt Power User",
        "icon": "$(circuit-board)"
      },
      {
        "command": "dbtPowerUser.altimateScan",
        "title": "Project Health Check",
        "category": "dbt Power User",
        "icon": "$(circuit-board)"
      },
      {
        "command": "dbtPowerUser.clearAltimateScanResults",
        "category": "dbt Power User",
        "title": "Clear Health Check Results"
      },
      {
        "command": "dbtPowerUser.bigqueryCostEstimate",
        "category": "dbt Power User",
        "title": "Estimate cost for BigQuery"
      },
      {
        "command": "dbtPowerUser.compileCurrentModel",
        "title": "Compile dbt Model",
        "category": "dbt Power User",
        "icon": {
          "light": "./media/images/build_light.svg",
          "dark": "./media/images/build_dark.svg"
        }
      },
      {
        "command": "dbtPowerUser.sqlPreview",
        "title": "Compiled dbt Preview",
        "category": "dbt Power User",
        "icon": "$(diff)"
      },
      {
        "command": "dbtPowerUser.runTest",
        "title": "Run Test",
        "category": "dbt Power User",
        "icon": "$(pass)"
      },
      {
        "command": "dbtPowerUser.testCurrentModel",
        "title": "Test dbt Model",
        "category": "dbt Power User",
        "icon": "$(pass)"
      },
      {
        "command": "dbtPowerUser.runChildrenModels",
        "title": "Run Downstream Models",
        "category": "dbt Power User",
        "icon": "$(run-below)"
      },
      {
        "command": "dbtPowerUser.runParentModels",
        "title": "Run Upstream Models",
        "category": "dbt Power User",
        "icon": "$(run-above)"
      },
      {
        "command": "dbtPowerUser.showRunSQL",
        "title": "Open dbt target folder run SQL",
        "category": "dbt Power User",
        "icon": {
          "light": "./media/images/file-code_light.svg",
          "dark": "./media/images/file-code_dark.svg"
        }
      },
      {
        "command": "dbtPowerUser.generateSchemaYML",
        "title": "Generate Documentation YML",
        "category": "dbt Power User",
        "icon": {
          "light": "./media/images/file-code_light.svg",
          "dark": "./media/images/file-code_dark.svg"
        }
      },
      {
        "command": "dbtPowerUser.goToDocumentationEditor",
        "title": "Open Documentation Editor",
        "category": "dbt Power User",
        "icon": {
          "light": "./media/images/file-code_light.svg",
          "dark": "./media/images/file-code_dark.svg"
        }
      },
      {
        "command": "dbtPowerUser.generateDBTDocs",
        "title": "Run Dbt Docs Generate",
        "category": "dbt Power User",
        "icon": {
          "light": "./media/images/run-light.svg",
          "dark": "./media/images/run-dark.svg"
        }
      },
      {
        "command": "dbtPowerUser.resetDatapilot",
        "title": "Start New Chat",
        "icon": "$(add)",
        "category": "dbt Power User"
      },
      {
        "command": "dbtPowerUser.maximizeDatapilot",
        "title": "Maximize",
        "category": "dbt Power User",
        "icon": {
          "light": "./media/images/fullscreen-light.svg",
          "dark": "./media/images/fullscreen-dark.svg"
        }
      },
      {
        "command": "dbtPowerUser.showHelpDatapilot",
        "title": "Help",
        "category": "dbt Power User",
        "icon": "$(question)"
      },
      {
        "command": "dbtPowerUser.showCompiledSQL",
        "title": "Open dbt target folder compiled SQL",
        "category": "dbt Power User",
        "icon": {
          "light": "./media/images/file-code_light.svg",
          "dark": "./media/images/file-code_dark.svg"
        }
      },
      {
        "command": "dbtPowerUser.executeSQL",
        "title": "Execute dbt SQL",
        "category": "dbt Power User",
        "icon": "$(play)"
      },
      {
        "command": "dbtPowerUser.buildCurrentModel",
        "title": "Build dbt Model",
        "category": "dbt Power User",
        "icon": {
          "light": "./media/images/build-model_light.svg",
          "dark": "./media/images/build-model_dark.svg"
        }
      },
      {
        "command": "dbtPowerUser.buildChildrenModels",
        "title": "Build Downstream Models",
        "category": "dbt Power User",
        "icon": {
          "light": "./media/images/build-model_light.svg",
          "dark": "./media/images/build-model_dark.svg"
        }
      },
      {
        "command": "dbtPowerUser.buildParentModels",
        "title": "Build Upstream Models",
        "category": "dbt Power User",
        "icon": {
          "light": "./media/images/build-model_light.svg",
          "dark": "./media/images/build-model_dark.svg"
        }
      },
      {
        "command": "dbtPowerUser.buildChildrenParentModels",
        "title": "Build Upstream and Downstream Models",
        "category": "dbt Power User",
        "icon": {
          "light": "./media/images/build-model_light.svg",
          "dark": "./media/images/build-model_dark.svg"
        }
      },
      {
        "command": "dbtPowerUser.buildCurrentProject",
        "title": "Build dbt Project",
        "category": "dbt Power User",
        "icon": {
          "light": "./media/images/build-model_light.svg",
          "dark": "./media/images/build-model_dark.svg"
        }
      }
    ],
    "keybindings": [
      {
        "key": "Ctrl+Enter",
        "mac": "Cmd+Enter",
        "command": "dbtPowerUser.executeSQL",
        "when": "editorFocus && resourceLangId =~ /^sql$|^jinja-sql$/"
      },
      {
        "key": "Ctrl+'",
        "mac": "Cmd+'",
        "command": "dbtPowerUser.sqlPreview"
      }
    ],
    "menus": {
      "dbtPowerUser.datapilotSubmenu": [
        {
          "command": "dbtPowerUser.openDatapilotWithQuery",
          "group": "datapilot@1"
        },
        {
          "command": "dbtPowerUser.summarizeQuery",
          "group": "datapilot@2"
        },
        {
          "command": "dbtPowerUser.changeQuery",
          "group": "datapilot@3"
        }
      ],
      "editor/title": [
        {
          "command": "dbtPowerUser.executeSQL",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/",
          "group": "navigation@1"
        },
        {
          "command": "dbtPowerUser.runCurrentModel",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/",
          "group": "navigation@3"
        },
        {
          "command": "dbtPowerUser.testCurrentModel",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/",
          "group": "navigation@4"
        },
        {
          "command": "dbtPowerUser.sqlPreview",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/",
          "group": "navigation@5"
        },
        {
          "command": "dbtPowerUser.sqlQuickPick",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/",
          "group": "navigation@1"
        },
        {
          "command": "dbtPowerUser.sqlToModel",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/",
          "group": "navigation@6"
        }
      ],
      "editor/context": [
        {
          "submenu": "dbtPowerUser.datapilotSubmenu",
          "group": "datapilot@1",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/"
        },
        {
          "submenu": "dbtPowerUser.buildModel",
          "group": "dbt@5",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/"
        },
        {
          "command": "dbtPowerUser.showCompiledSQL",
          "group": "dbt@5",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/"
        },
        {
          "command": "dbtPowerUser.showRunSQL",
          "group": "dbt@6",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/"
        },
        {
          "command": "dbtPowerUser.goToDocumentationEditor",
          "group": "dbt@7",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/"
        },
        {
          "command": "dbtPowerUser.testCurrentModel",
          "group": "dbt@2",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/"
        },
        {
          "command": "dbtPowerUser.runCurrentModel",
          "group": "dbt@1",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/"
        },
        {
          "command": "dbtPowerUser.sqlToModel",
          "group": "dbt@3",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/"
        },
        {
          "command": "dbtPowerUser.compileCurrentModel",
          "group": "dbt@4",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/"
        },
        {
          "command": "dbtPowerUser.validateSql",
          "group": "dbt@4",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/"
        },
        {
          "command": "dbtPowerUser.bigqueryCostEstimate",
          "group": "dbt@4",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/"
        }
      ],
      "editor/title/run": [
        {
          "command": "dbtPowerUser.buildCurrentProject",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/",
          "group": "inline"
        },
        {
          "command": "dbtPowerUser.buildCurrentModel",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/",
          "group": "inline"
        },
        {
          "command": "dbtPowerUser.buildChildrenModels",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/",
          "group": "inline"
        },
        {
          "command": "dbtPowerUser.buildParentModels",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/",
          "group": "inline"
        },
        {
          "command": "dbtPowerUser.buildChildrenParentModels",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/",
          "group": "inline"
        },
        {
          "command": "dbtPowerUser.runCurrentModel",
          "when": "resourceLangId =~ /^sql$|^jinja-sql$/",
          "group": "inline"
        }
      ],
      "view/title": [
        {
          "command": "dbtPowerUser.testCurrentModel",
          "when": "view == model_test_treeview",
          "group": "navigation"
        },
        {
          "command": "dbtPowerUser.runChildrenModels",
          "when": "view == children_model_treeview",
          "group": "navigation"
        },
        {
          "command": "dbtPowerUser.runParentModels",
          "when": "view == parent_model_treeview",
          "group": "navigation"
        },
        {
          "command": "dbtPowerUser.generateDBTDocs",
          "when": "view == documentation_treeview",
          "group": "navigation"
        },
        {
          "command": "dbtPowerUser.resetDatapilot",
          "when": "view == dbtPowerUser.datapilot-webview",
          "group": "navigation@1"
        },
        {
          "command": "dbtPowerUser.showHelpDatapilot",
          "when": "view == dbtPowerUser.datapilot-webview",
          "group": "navigation@3"
        }
      ],
      "view/item/context": [
        {
          "command": "dbtPowerUser.runTest",
          "when": "view == model_test_treeview && viewItem != source",
          "group": "inline"
        },
        {
          "command": "dbtPowerUser.runChildrenModels",
          "when": "view == children_model_treeview && viewItem != source",
          "group": "inline"
        },
        {
          "command": "dbtPowerUser.runParentModels",
          "when": "view == parent_model_treeview && viewItem != source",
          "group": "inline"
        },
        {
          "command": "dbtPowerUser.goToDocumentationEditor",
          "when": "view == documentation_treeview",
          "group": "inline"
        }
      ]
    },
    "dbtPowerUser.buildModel": [
      {
        "command": "dbtPowerUser.buildCurrentModel",
        "when": "resourceLangId =~ /^sql$|^jinja-sql$/",
        "group": "inline"
      },
      {
        "command": "dbtPowerUser.buildChildrenModels",
        "when": "resourceLangId =~ /^sql$|^jinja-sql$/",
        "group": "inline"
      },
      {
        "command": "dbtPowerUser.buildParentModels",
        "when": "resourceLangId =~ /^sql$|^jinja-sql$/",
        "group": "inline"
      },
      {
        "command": "dbtPowerUser.buildChildrenParentModels",
        "when": "resourceLangId =~ /^sql$|^jinja-sql$/",
        "group": "inline"
      }
    ],
    "submenus": [
      {
        "id": "dbtPowerUser.buildModel",
        "label": "Build dbt Model",
        "icon": {
          "light": "./media/images/build-model_light.svg",
          "dark": "./media/images/build-model_dark.svg"
        }
      },
      {
        "id": "dbtPowerUser.datapilotSubmenu",
        "label": "Datapilot"
      }
    ],
    "languages": [
      {
        "id": "jinja-sql",
        "icon": {
          "light": "./media/images/dbt_file_icon.svg",
          "dark": "./media/images/dbt_file_icon.svg"
        }
      }
    ],
    "walkthroughs": [
      {
        "id": "initialSetup",
        "title": "%walkthrough.initialSetup.title%",
        "description": "%walkthrough.initialSetup.description%",
        "steps": [
          {
            "id": "open",
            "title": "%walkthrough.initialSetup.steps.open.title%",
            "description": "%walkthrough.initialSetup.steps.open.description%",
            "when": "workspaceFolderCount == 0",
            "media": {
              "markdown": "media/loadDbtProject.md"
            }
          },
          {
            "id": "initialSupport",
            "title": "%walkthrough.initialSetup.steps.support.title%",
            "description": "%walkthrough.initialSetup.steps.support.description%",
            "media": {
              "markdown": "media/initialSetup.md"
            }
          },
          {
            "id": "updateExtension",
            "title": "%walkthrough.initialSetup.steps.updateExtension.title%",
            "description": "%walkthrough.initialSetup.steps.updateExtension.description%",
            "when": "dbtPowerUser.needsExtensionUpdate",
            "media": {
              "markdown": "media/updateExtension.md"
            },
            "completionEvents": [
              "onContext:dbtPowerUser.needsExtensionUpdate"
            ]
          },
          {
            "id": "selectInterpreter",
            "title": "%walkthrough.initialSetup.steps.selectInterpreter.title%",
            "description": "%walkthrough.initialSetup.steps.selectInterpreter.description%",
            "media": {
              "markdown": "media/selectInterpreter.md"
            },
            "completionEvents": [
              "onSettingChanged:python.setInterpreter"
            ]
          },
          {
            "id": "installDbt",
            "title": "%walkthrough.initialSetup.steps.installDbt.title%",
            "description": "%walkthrough.initialSetup.steps.installDbt.description%",
            "when": "!dbtPowerUser.dbtInstalled",
            "media": {
              "markdown": "media/installDbt.md"
            },
            "completionEvents": [
              "onContext:dbtPowerUser.dbtInstalled"
            ]
          },
          {
            "id": "associateFileExts",
            "title": "%walkthrough.initialSetup.steps.associateFileExts.title%",
            "description": "%walkthrough.initialSetup.steps.associateFileExts.description%",
            "when": "dbtPowerUser.showFileAssociationStep",
            "media": {
              "markdown": "media/associateFileExts.md"
            },
            "completionEvents": [
              "onCommand:dbtPowerUser.checkDbtInstalled"
            ]
          },
          {
            "id": "pickProject",
            "title": "%walkthrough.initialSetup.steps.pickProject.title%",
            "description": "%walkthrough.initialSetup.steps.pickProject.description%",
            "when": "dbtPowerUser.projectCount > 1",
            "media": {
              "markdown": "media/pickProject.md"
            },
            "completionEvents": [
              "onContext:dbtPowerUser.walkthroughProjectSelected"
            ]
          },
          {
            "id": "installDeps",
            "title": "%walkthrough.initialSetup.steps.installDeps.title%",
            "description": "%walkthrough.initialSetup.steps.installDeps.description%",
            "when": "dbtPowerUser.walkthroughProjectSelected",
            "media": {
              "markdown": "media/installDeps.md"
            },
            "completionEvents": [
              "onCommand:dbtPowerUser.installDeps"
            ]
          },
          {
            "id": "validateProject",
            "title": "%walkthrough.initialSetup.steps.validateProject.title%",
            "description": "%walkthrough.initialSetup.steps.validateProject.description%",
            "when": "dbtPowerUser.walkthroughProjectSelected",
            "media": {
              "markdown": "media/validateProject.md"
            },
            "completionEvents": [
              "onCommand:dbtPowerUser.validateProject"
            ]
          },
          {
            "id": "finish",
            "title": "%walkthrough.initialSetup.steps.finish.title%",
            "description": "%walkthrough.initialSetup.steps.finish.description%",
            "when": "dbtPowerUser.walkthroughProjectSelected",
            "media": {
              "markdown": "media/finish.md"
            }
          }
        ]
      },
      {
        "id": "tutorials",
        "title": "%walkthrough.tutorials.title%",
        "description": "%walkthrough.tutorials.description%",
        "steps": [
          {
            "id": "generate_models",
            "title": "%walkthrough.tutorials.steps.generate_models.title%",
            "description": "%walkthrough.tutorials.steps.generate_models.description%",
            "media": {
              "markdown": "media/generate_models.md"
            }
          },
          {
            "id": "autocompletion",
            "title": "%walkthrough.tutorials.steps.autocompletion.title%",
            "description": "%walkthrough.tutorials.steps.autocompletion.description%",
            "media": {
              "markdown": "media/autocompletion.md"
            }
          },
          {
            "id": "previews",
            "title": "%walkthrough.tutorials.steps.previews.title%",
            "description": "%walkthrough.tutorials.steps.previews.description%",
            "media": {
              "markdown": "media/previews.md"
            }
          },
          {
            "id": "dependants",
            "title": "%walkthrough.tutorials.steps.dependants.title%",
            "description": "%walkthrough.tutorials.steps.dependants.description%",
            "media": {
              "markdown": "media/dependants.md"
            }
          },
          {
            "id": "documentation",
            "title": "%walkthrough.tutorials.steps.documentation.title%",
            "description": "%walkthrough.tutorials.steps.documentation.description%",
            "media": {
              "markdown": "media/documentation.md"
            }
          },
          {
            "id": "lineage",
            "title": "%walkthrough.tutorials.steps.lineage.title%",
            "description": "%walkthrough.tutorials.steps.lineage.description%",
            "media": {
              "markdown": "media/lineage.md"
            }
          },
          {
            "id": "healthcheck",
            "title": "%walkthrough.tutorials.steps.healthcheck.title%",
            "description": "%walkthrough.tutorials.steps.healthcheck.description%",
            "media": {
              "markdown": "media/healthcheck.md"
            }
          }
        ]
      }
    ]
  },
  "scripts": {
    "prepare": "husky install",
    "vscode:prepublish": "npm run panel:webviews && npm run panel:lineage && webpack --mode production",
    "webpack": "npm run panel:webviews && npm run panel:lineage && webpack --mode development",
    "webpack-dev": "npm run panel:webviews && npm run panel:lineage && webpack --mode development --watch",
    "watch": "concurrently \"npm:watch --prefix ./new_lineage_panel\" \"npm:watch --prefix ./webview_panels\" \"webpack --mode development --watch\"",
    "test-compile": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "lint:fix": "eslint src --ext ts --fix",
    "deploy-vscode": "vsce publish",
    "build-vsix": "vsce package",
    "deploy-openvsx": "ovsx publish",
    "panel:webviews": "npm run build --prefix ./webview_panels",
    "panel:lineage": "npm run build --prefix ./new_lineage_panel",
    "install:panels": "npm install --prefix ./new_lineage_panel && npm install --prefix ./webview_panels"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "^20.9.1",
    "@types/vscode": "^1.81.0",
    "@types/which": "^3.0.3",
    "@typescript-eslint/eslint-plugin": "^5.62.0",
    "@typescript-eslint/parser": "^5.62.0",
    "@vscode/test-electron": "^2.3.9",
    "concurrently": "^8.2.2",
    "copy-webpack-plugin": "^11.0.0",
    "cross-env": "^7.0.3",
    "eslint": "^8.53.0",
    "eslint-config-prettier": "^8.9.0",
    "eslint-plugin-prettier": "^5.0.1",
    "file-loader": "^6.1.0",
    "glob": "^10.3.10",
    "husky": "^9.0.11",
    "lint-staged": "^14.0.1",
    "mocha": "^10.2.0",
    "ovsx": "^0.8.3",
    "prettier": "^3.0.3",
    "prettier-eslint": "^15.0.1",
    "prettier-plugin-organize-imports": "^3.2.4",
    "terser-webpack-plugin": "^5.3.10",
    "ts-loader": "^9.4.4",
    "typescript": "^4.9.5",
    "webpack": "^5.88.2",
    "webpack-cli": "^5.1.4"
  },
  "extensionDependencies": [
    "samuelcolvin.jinjahtml",
    "ms-python.python"
  ],
  "dependencies": {
    "@vscode/codicons": "^0.0.35",
    "@vscode/extension-telemetry": "^0.8.4",
    "@vscode/vsce": "^2.23.0",
    "@vscode/webview-ui-toolkit": "^1.4.0",
    "dayjs": "^1.11.10",
    "inversify": "^6.0.2",
    "inversify-binding-decorators": "^4.0.0",
    "node-abort-controller": "^3.1.1",
    "node-fetch": "^3.3.2",
    "parse-diff": "^0.11.1",
    "python-bridge": "github:mdesmet/node-python-bridge#feat/detached",
    "reflect-metadata": "^0.1.13",
    "which": "^4.0.0",
    "yaml": "^2.3.4"
  },
  "lint-staged": {
    "**/webview_panels/**/*.{ts,tsx}": [
      "cross-env PRE_COMMIT=true npm run lint --fix --prefix webview_panels",
      "prettier -w"
    ],
    "*.ts": [
      "eslint src --ext ts --fix",
      "eslint --max-warnings=0"
    ],
    "*.{js,css,md,html,json}": "prettier --cache --write"
  }
}
